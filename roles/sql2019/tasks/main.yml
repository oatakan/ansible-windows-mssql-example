---

- name: Install required DSC modules
  community.windows.win_psmodule:
    name: "{{ item }}"
    state: present
  loop:
    - NetworkingDsc
    - SqlServerDsc

- name: set up sqladmin user
  ansible.windows.win_user:
    name: "{{ mssql_username }}"
    password: "{{ mssql_password }}"
    password_never_expires: True
    state: present
    groups:
      - Administrators

- name: install .Net
  ansible.windows.win_feature:
    name: "{{ item }}"
    state: present
    include_sub_features: True
    include_management_tools: True
  loop:
    - NET-Framework-Core
    - NET-Framework-Features
  register: install_dotnet
  until: install_dotnet is success
  delay: 3
  retries: 5

- name: create directory structure
  ansible.windows.win_file:
    path: "{{ item }}"
    state: directory
  loop:
    - C:\Backup
    - C:\Databases
    - C:\UserDatabases

- name: check ISO file
  ansible.windows.win_stat:
    path: "{{ iso_path }}"
  register: iso_file

- include_tasks: download_iso.yml
  when: (":" in iso_path) or (not iso_file.stat.exists)

- block:
    - name: mount iso
      community.windows.win_disk_image:
        image_path: "{{ iso_path }}"
        state: present
      register: disk_image_out
      until: disk_image_out is success
      delay: 3
      retries: 5

    - name: install SQL 2019
      ansible.windows.win_dsc:
        resource_name: Package
        Path: '{{ disk_image_out.mount_paths[0] }}setup.exe'
        ProductId: '{{ product_id.sql2019 }}'
        Name: Microsoft SQL Server 2019
        Arguments: >
          /Q
          /ACTION=Install
          /IACCEPTSQLSERVERLICENSETERMS
          /ENU
          /UPDATEENABLED=false
          /FEATURES=SQLENGINE,Conn
          /INSTANCENAME=MSSQLSERVER
          /SECURITYMODE=SQL
          /SAPWD={{ mssql_password }}
          /AGTSVCSTARTUPTYPE=automatic
          /BROWSERSVCSTARTUPTYPE=automatic
          /SQLSYSADMINACCOUNTS={{ mssql_username }}
          /SQLBACKUPDIR=C:\Backup
          /SQLUSERDBDIR=C:\Databases
          /SQLUSERDBLOGDIR=C:\UserDatabases
      register: sql_install

  always:
    - name: unmount iso
      community.windows.win_disk_image:
        image_path: "{{ iso_path }}"
        state: absent

- name: reboot if needed
  ansible.windows.win_reboot:
  when:
    - sql_install.reboot_required is defined
    - sql_install.reboot_required

- name: enable tcp protocol SQL server instance
  ansible.windows.win_dsc:
    resource_name: SqlProtocol
    InstanceName: MSSQLSERVER
    ProtocolName: TcpIp
    Enabled: True

- name: enable tcp port on SQL server instance
  ansible.windows.win_dsc:
    resource_name: SqlProtocolTcpIP
    InstanceName: MSSQLSERVER
    IpAddressGroup: IPAll
    TCPPort: 1433
    Enabled: True

- name: Open port for MSSQL
  ansible.windows.win_dsc:
    resource_name: Firewall
    ensure: Present
    name: MSSQL
    enabled: True
    localport: 1433
    action: Allow
    direction: Inbound
    protocol: TCP